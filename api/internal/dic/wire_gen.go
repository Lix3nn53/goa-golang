// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire

package dic

import (
	"goa-golang/app/controller/billingController"
	"goa-golang/app/controller/userController"
	"goa-golang/app/repository/billingRepository"
	"goa-golang/app/repository/userRepository"
	"goa-golang/app/service/billingService"
	"goa-golang/app/service/userService"
	"goa-golang/internal/logger"
	"goa-golang/internal/storage"
)

// Injectors from wire.go:

func InitUserService(db *storage.DbStore) userService.UserServiceInterface {
	userRepositoryInterface := userRepository.NewUserRepository(db)
	userServiceInterface := userService.NewUserService(userRepositoryInterface)
	return userServiceInterface
}

func InitUserController(us userService.UserServiceInterface, logger2 logger.Logger) userController.UserControllerInterface {
	userControllerInterface := userController.NewUserController(us, logger2)
	return userControllerInterface
}

func InitBillingService(db *storage.DbStore) billingService.BillingServiceInterface {
	billingRepositoryInterface := billingRepository.NewBillingRepository(db)
	billingServiceInterface := billingService.NewBillingService(billingRepositoryInterface)
	return billingServiceInterface
}

func InitBillingController(ub billingService.BillingServiceInterface, us userService.UserServiceInterface, logger2 logger.Logger) billingController.BillingControllerInterface {
	billingControllerInterface := billingController.NewBillingController(ub, us, logger2)
	return billingControllerInterface
}
