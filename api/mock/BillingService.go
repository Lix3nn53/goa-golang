// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/service/billingService/billingService.go

// Package mock is a generated GoMock package.
package mock

import (
	billingModel "goa-golang/app/model/billingModel"
	userModel "goa-golang/app/model/userModel"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBillingServiceInterface is a mock of BillingServiceInterface interface.
type MockBillingServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBillingServiceInterfaceMockRecorder
}

// MockBillingServiceInterfaceMockRecorder is the mock recorder for MockBillingServiceInterface.
type MockBillingServiceInterfaceMockRecorder struct {
	mock *MockBillingServiceInterface
}

// NewMockBillingServiceInterface creates a new mock instance.
func NewMockBillingServiceInterface(ctrl *gomock.Controller) *MockBillingServiceInterface {
	mock := &MockBillingServiceInterface{ctrl: ctrl}
	mock.recorder = &MockBillingServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBillingServiceInterface) EXPECT() *MockBillingServiceInterfaceMockRecorder {
	return m.recorder
}

// AddBilling mocks base method.
func (m *MockBillingServiceInterface) AddBilling(user userModel.User, payment billingModel.Payment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddBilling", user, payment)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddBilling indicates an expected call of AddBilling.
func (mr *MockBillingServiceInterfaceMockRecorder) AddBilling(user, payment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddBilling", reflect.TypeOf((*MockBillingServiceInterface)(nil).AddBilling), user, payment)
}

// GetPaymentAdapter mocks base method.
func (m *MockBillingServiceInterface) GetPaymentAdapter(customer billingModel.CreateCustomer) (*billingModel.Payment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentAdapter", customer)
	ret0, _ := ret[0].(*billingModel.Payment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentAdapter indicates an expected call of GetPaymentAdapter.
func (mr *MockBillingServiceInterfaceMockRecorder) GetPaymentAdapter(customer interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentAdapter", reflect.TypeOf((*MockBillingServiceInterface)(nil).GetPaymentAdapter), customer)
}
