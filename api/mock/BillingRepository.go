// Code generated by MockGen. DO NOT EDIT.
// Source: UserRepository.go

// Package mock is a generated GoMock package.
package mock

import (
	"github.com/golang/mock/gomock"
	"goa-golang/app/model/billingModel"
	"reflect"
)

// MockBillingPGRepository is a mock of UserPGRepository interface
type MockBillingPGRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBillingPGRepositoryMockRecorder
}

// MockBillingPGRepositoryMockRecorder is the mock recorder for MockBillingPGRepository
type MockBillingPGRepositoryMockRecorder struct {
	mock *MockBillingPGRepository
}

// NewMockBillingPGRepository creates a new mock instance
func NewMockBillingPGRepository(ctrl *gomock.Controller) *MockBillingPGRepository {
	mock := &MockBillingPGRepository{ctrl: ctrl}
	mock.recorder = &MockBillingPGRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBillingPGRepository) EXPECT() *MockBillingPGRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockBillingPGRepository) CreateBillingService(identify billingModel.Identify, PaymentUserKey string, userID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBillingService", identify, PaymentUserKey, userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockBillingPGRepositoryMockRecorder) CreateBillingService(identify interface{}, PaymentUserKey interface{}, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBillingService", reflect.TypeOf((*MockBillingPGRepository)(nil).CreateBillingService), identify, PaymentUserKey, userID)
}
